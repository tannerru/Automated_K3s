apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config
  namespace: media
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  
  namespace: media
  labels:
    app: jellyfin_service
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 8096
    protocol: TCP
    targetPort: 8096
  - name: http2
    port: 8920
    protocol: TCP
    targetPort: 8920 
  - name: http3
    port: 7359
    protocol: UDP
    targetPort: 7359
  - name: http4
    port: 1900
    protocol: UDP
    targetPort: 1900
    
  selector:    
    app: jellyfin
  type: LoadBalancer
  loadBalancerIP: 10.0.40.164
   
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media
  labels:
    dep: jellyfin-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
      annotations:
        k8s.v1.cni.cncf.io/networks: macvlan-conf
      
    spec:
      containers:
        - name: jellyfin
          
          image: ghcr.io/linuxserver/jellyfin:latest
          resources:
            requests: 
              memory: 2Gi
              cpu: 1000m
            limits:
              memory: 4Gi
              cpu: 2000m
          ports:
          - name: port8096
            containerPort: 8096
          - name: port8920
            containerPort: 8920
          - name: port7359
            containerPort: 7359
          - name: port1900
            containerPort: 1900

          volumeMounts:
            - name: media
              mountPath: /media

            - name: config
              mountPath: /config

      volumes:
        - name: media
          nfs:
            server: 10.0.50.4
            path: /mnt/Slow/Media

        - name: config
          persistentVolumeClaim:
             claimName: jellyfin-config
